name: Chat SQL Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Specify the Python version(s) you want to test with
        python-version: [3.8] # You can add more versions like [3.8, 3.9, 3.10]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: false
          token: ${{ secrets.GITHUB_TOKEN }}
          update-environment: true
          allow-prereleases: false
          cache: 'pip' # Keep caching

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          echo "Installing core dependencies: pandas, openai, pytest"
          python -m pip install pandas openai pytest
          if [ -f requirements.txt ]; then
            echo "requirements.txt found, installing..."
            python -m pip install -r requirements.txt
          else
            echo "requirements.txt not found, skipping."
          fi
          echo "Listing installed packages:"
          python -m pip freeze # Keep debugging output

      # The Flake8 linting step has been removed.

      - name: Display chat_sql_v1.py content for debugging
        run: |
          echo "--- Contents of LLM_SQL/chat_sql_v1.py being tested ---"
          cat LLM_SQL/chat_sql_v1.py || echo "ERROR: File LLM_SQL/chat_sql_v1.py not found or cat failed"
          echo "--- End of File Contents ---"

      - name: Run tests with pytest in LLM_SQL
        run: |
          # Run pytest:
          # --maxfail=1 : Stop after the first test failure
          # --disable-warnings : Suppress warnings during test execution
          # -q : Run in quiet mode (less verbose output)
          # LLM_SQL/ : Specify the directory containing the tests
          pytest --maxfail=1 --disable-warnings -q LLM_SQL/
